/*
Button background color
*/
@mixin button-bg($bg) {
    background-color: $bg;
    &:hover {
        background-color:darken($bg,8%);
        transition: $transition;
    }
    &:active {
        background-color:darken($bg,25%);
    }
}

/*
String Replace
*/
// @function str-replace($string, $search, $replace: "") {
//     $index: str-index($string, $search);
//     @if $index {
//         @return str-slice($string, 1, $index - 1)+$replace+str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
//     }
//     @return $string;
// }

/*
Font Face
*/
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;
    $extmods: ( eot: "?", svg: "#" + str-replace($name, " ", "_"));
    $formats: ( otf: "opentype", ttf: "truetype");
    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }
    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src;
        font-display: swap; /* or block, swap, fallback, optional */
    }
}

/*
Cut text
*/
@mixin limit-row($row) {
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: $row;
    display: -webkit-box;
    -webkit-box-orient: vertical;
}
@mixin limit-line {
    width: 100%;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

/*
flexbox
*/
@mixin flex($x-justify: center, $y-align: center) {
    display: flex;
    flex-wrap: wrap;
    justify-content: $x-justify;
    align-items: $y-align;
}

// typography
@mixin typo($ff, $fz, $fw, $lh, $cl) {
    font-family: $ff;
    font-size: $fz;
    font-weight: $fw;
    line-height: $lh;
    color: $cl;
}
